import{_ as s,c as a,o as n,a3 as e}from"./chunks/framework.DDS4xREW.js";const t="/dotpi/assets/rpi-imager-1.DlZmmHxx.png",o="/dotpi/assets/rpi-imager-2.BwoJzPvx.png",p="/dotpi/assets/rpi-imager-3.D4EmAsY8.png",l="/dotpi/assets/finder-fsboot.32xJpeEE.png",i="/dotpi/assets/dotpi-install-instance.C2gwrd9F.png",w=JSON.parse('{"title":"Getting started","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/getting-started.md","filePath":"introduction/getting-started.md"}'),r={name:"introduction/getting-started.md"},c=e(`<h1 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting started&quot;">​</a></h1><p>In this first guide we will see how to use the <code>dotpi-install</code> tools to setup a Raspberry Pi, and how to monitor and control it remotely using the <code>dotpi-manager</code></p><h2 id="cloning-the-dotpi-install-tools" tabindex="-1">Cloning the <code>dotpi_install</code> tools <a class="header-anchor" href="#cloning-the-dotpi-install-tools" aria-label="Permalink to &quot;Cloning the \`dotpi_install\` tools&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">git</span><span style="color:#E6DB74;"> clone https://github.com/ircam-ismm/dotpi-install</span></span></code></pre></div><h2 id="creating-a-project" tabindex="-1">Creating a project <a class="header-anchor" href="#creating-a-project" aria-label="Permalink to &quot;Creating a project&quot;">​</a></h2><p>The repository comes with a set of <em>dotpi</em> project configuration examples that you can see in <code>projects</code> directory. In this guide, we will use the <code>example_development</code> project as a starter for creating a new project. So let&#39;s first copy this directory before exploring the project structure and make some modifications:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#E6DB74;"> path/to/dotpi-install</span></span>
<span class="line"><span style="color:#A6E22E;">cp</span><span style="color:#AE81FF;"> -R</span><span style="color:#E6DB74;"> projects/example-development projects/getting-started</span></span></code></pre></div><p>If you open the project in your favorite editor, you should see the following directory structure:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">getting-started</span></span>
<span class="line"><span style="color:#A6E22E;">├──</span><span style="color:#E6DB74;"> configuration           </span></span>
<span class="line"><span style="color:#A6E22E;">│</span><span style="color:#E6DB74;">   └── dotpi_project.bash</span></span>
<span class="line"><span style="color:#A6E22E;">└──</span><span style="color:#E6DB74;"> secrets               </span></span>
<span class="line"><span style="color:#A6E22E;">    ├──</span><span style="color:#E6DB74;"> network </span></span>
<span class="line"><span style="color:#A6E22E;">    │</span><span style="color:#E6DB74;">   └── components  </span></span>
<span class="line"><span style="color:#A6E22E;">    ├──</span><span style="color:#E6DB74;"> ssh         </span></span>
<span class="line"><span style="color:#A6E22E;">    │</span><span style="color:#E6DB74;">   ├── id_rsa_dotpi_example</span></span>
<span class="line"><span style="color:#A6E22E;">    │</span><span style="color:#E6DB74;">   └── id_rsa_dotpi_example.pub</span></span>
<span class="line"><span style="color:#A6E22E;">    └──</span><span style="color:#E6DB74;"> dotpi_project.bash</span></span></code></pre></div><p>The directory name should be quite self-explanatory, but, just in case, you should be careful to never share publicly (e.g. on github) the files located into the <code>secrets</code> directory.</p><h3 id="project-public-configuration" tabindex="-1">Project public configuration <a class="header-anchor" href="#project-public-configuration" aria-label="Permalink to &quot;Project public configuration&quot;">​</a></h3><p>Let&#39;s first open the <code>getting-started/configuration/dotpi_project.bash</code> file to change some of the project global setting:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai has-diff vp-code"><code><span class="line diff remove"><span style="color:#F8F8F2;">dotpi_project_name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;example&#39;</span></span>
<span class="line diff add"><span style="color:#F8F8F2;">dotpi_project_name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;getting-started&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># default is yes</span></span>
<span class="line"><span style="color:#F8F8F2;">dotpi_ssh_allow_password_authentication</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;yes&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># no default password:</span></span>
<span class="line"><span style="color:#88846F;"># - keep the one set by the imager</span></span>
<span class="line"><span style="color:#88846F;"># - or override in secrets/dotpi_secrets.bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">dotpi_timezone</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;Europe/Paris&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">dotpi_keymap</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;fr&#39;</span></span>
<span class="line"></span>
<span class="line diff remove"><span style="color:#F8F8F2;">dotpi_audio_device</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;HiFiBerry DAC+ ADC Pro&#39;</span></span>
<span class="line diff add"><span style="color:#F8F8F2;">dotpi_audio_device</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;headphone&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># use node.js specific version</span></span>
<span class="line"><span style="color:#88846F;"># default is lts</span></span>
<span class="line"><span style="color:#F8F8F2;">dotpi_node_version</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;lts&#39;</span></span></code></pre></div><ul><li>The <code>dotpi_project_name</code> will mainly define the hostname format of the RPis configured with the project, e.g. <code>dotpi-getting-started-001</code></li><li>The <code>dotpi_audio_device</code> will configure the audio output of your RPi, setting to <code>headphones</code> will disable the HDMI audio output to keep only the default mini jack of the RPi.</li></ul><p>Now that some general information about our project are defined, let&#39;s configure some secrets of the project.</p><h3 id="change-the-password" tabindex="-1">Change the password <a class="header-anchor" href="#change-the-password" aria-label="Permalink to &quot;Change the password&quot;">​</a></h3><p>First let&#39;s change the password of the RPi. Open the <code>getting-started/secrets/dotpi-secrets.bash</code> bash file and change the password to anything that suits you:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai has-diff vp-code"><code><span class="line"><span style="color:#88846F;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># you should change this</span></span>
<span class="line diff remove"><span style="color:#F8F8F2;">dotpi_password</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;!raspberry&#39;</span></span>
<span class="line diff add"><span style="color:#F8F8F2;">dotpi_password</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;yoursuperpasssword&#39;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Note that in this first guide, we don&#39;t configure nor use any SSH keys. In very simple settings that could be OK, but it is likely that you will soon find such functionality convenient. See <a href="./../">@todo</a> for further information on that point.</p></div><h3 id="wi-fi-configuration" tabindex="-1">Wi-Fi configuration <a class="header-anchor" href="#wi-fi-configuration" aria-label="Permalink to &quot;Wi-Fi configuration&quot;">​</a></h3><p>Finally, let&#39;s configure the WiFi connection, so that:</p><ul><li>You will be able to access the RPi through SSH or something</li><li>The RPi will be able to connect to the Internet to install itself in the next step</li></ul><p>Open the <code>getting-started/network/wifi-local.nmconnection</code> file and change the following lines to put the information from you WiFi connection:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki monokai vp-code"><code><span class="line"><span>[connection]</span></span>
<span class="line"><span>id=wifi-internet</span></span>
<span class="line"><span>type=wifi</span></span>
<span class="line"><span>interface-name=wlan0</span></span>
<span class="line"><span>autoconnect=false</span></span>
<span class="line"><span>autoconnect-priority=-10</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[wifi]</span></span>
<span class="line"><span>mode=infrastructure</span></span>
<span class="line highlighted"><span>ssid=YourBoxSSID</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[wifi-security]</span></span>
<span class="line"><span>key-mgmt=wpa-psk</span></span>
<span class="line highlighted"><span>psk=ThePassword</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[ipv4]</span></span>
<span class="line"><span>method=auto</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[ipv6]</span></span>
<span class="line"><span>addr-gen-mode=default</span></span>
<span class="line"><span>method=link-local</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[proxy]</span></span></code></pre></div><p>Now that we have configured all the most important points, let&#39;s prepare our SD Card.</p><h2 id="preparing-the-sd-card" tabindex="-1">Preparing the SD Card <a class="header-anchor" href="#preparing-the-sd-card" aria-label="Permalink to &quot;Preparing the SD Card&quot;">​</a></h2><p>To prepare the system image, we will simply use the <a href="https://www.raspberrypi.com/software/" target="_blank" rel="noreferrer">Raspberry Pi Imager</a> provided by the Raspberry Pi foundation.</p><ol><li>Insert a SD Card into your computer</li><li>Launch the Raspberry Pi Imager</li><li>Select the Raspberry Pi target</li><li>Select the operating system, e.g. Raspberry Pi OS Lite</li></ol><p>You can now click on the &quot;NEXT&quot; button</p><p><img src="`+t+'" alt="rpi-image-1"> On the next screen, select &quot;NO&quot; to not apply any customization setting, these settings will be applied from your project configuration file by the <em>dotpi install</em></p><p><img src="'+o+'" alt="rpi-image-2"> Finally, click on &quot;YES&quot; to start the installation of the system on the SD Card</p><p><img src="'+p+'" alt="rpi-image-3"> By default, the Imager will automatically eject the SD Card when the installation terminates. So let&#39;s just re-plug the SC Card so that we can apply the <em>dotpi</em> configuration on the SD Card.</p><p>Once re-plugged into your computer, you should see a volume called <code>fsboot</code> mounted in the &quot;Finder&quot;</p><p><img src="'+l+`" alt="finder-fsboot"></p><p>Let then go back into your &quot;Terminal&quot; on launch the following command to finalize the preparation of the SD Card with your <em>dotpi</em> project configuration:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;"># go into the dotpi-install directory</span></span>
<span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#E6DB74;"> path/to/dotpi-install</span></span>
<span class="line"><span style="color:#88846F;"># launch the command that will finalize the preparation of your SD Card</span></span>
<span class="line"><span style="color:#88846F;"># giving the path to the project configuration</span></span>
<span class="line"><span style="color:#A6E22E;">./dotpi_root/bin/dotpi_prepare_sd_card</span><span style="color:#AE81FF;"> --project</span><span style="color:#E6DB74;"> projects/getting-started/</span></span></code></pre></div><p>The tool will ask you for an instance number, just put &quot;1&quot; for example.</p><p><img src="`+i+`" alt="dotpi-install-instance"></p><p>As you can see this number will be used to define the <code>hostname</code> of your RPi, which will stand to be really useful when you will have multiple of them running.</p><h2 id="booting-the-raspberry-pi" tabindex="-1">Booting the Raspberry Pi <a class="header-anchor" href="#booting-the-raspberry-pi" aria-label="Permalink to &quot;Booting the Raspberry Pi&quot;">​</a></h2><p>Now that the SD Card is fully prepared, you can just plug it in your Raspberry Pi and power it on.</p><p>If you&#39;d like to monitor the installation of the system, you can just run the command that the tool proposed you on the last line:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki monokai vp-code"><code><span class="line"><span>INFO: You can monitor the preparation of the system with the following command</span></span>
<span class="line"><span>INFO: (You will have to wait until the network is ready.)</span></span>
<span class="line"><span>INFO:</span></span>
<span class="line"><span>INFO: ssh pi@dotpi-getting-started-001.local &#39;tail -f /opt/dotpi/var/log/dotpi_prepare_system_*.log&#39;</span></span></code></pre></div><h2 id="using-the-dotpi-manager" tabindex="-1">Using the <code>dotpi-manager</code> <a class="header-anchor" href="#using-the-dotpi-manager" aria-label="Permalink to &quot;Using the \`dotpi-manager\`&quot;">​</a></h2><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2>`,45),d=[c];function h(u,g,y,m,f,b){return n(),a("div",null,d)}const F=s(r,[["render",h]]);export{w as __pageData,F as default};
