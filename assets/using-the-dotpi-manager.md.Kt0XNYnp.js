import{_ as e,c as a,o as t,a3 as n}from"./chunks/framework.DDS4xREW.js";const o="/dotpi/assets/dotpi-manager.DNj639ad.png",f=JSON.parse('{"title":"Using the dotpi-manager","description":"","frontmatter":{},"headers":[],"relativePath":"using-the-dotpi-manager.md","filePath":"using-the-dotpi-manager.md"}'),s={name:"using-the-dotpi-manager.md"},i=n('<h1 id="using-the-dotpi-manager" tabindex="-1">Using the <code>dotpi-manager</code> <a class="header-anchor" href="#using-the-dotpi-manager" aria-label="Permalink to &quot;Using the `dotpi-manager`&quot;">​</a></h1><p>The <code>dotpi-manager</code> is a <a href="http://soundworks.dev" target="_blank" rel="noreferrer"><em>soundworks</em></a> application aimed at managing and controlling fleets of RPi. It is composed of:</p><ul><li>a Node.js server that should run on your computer</li><li>a Browser client to monitor and control your fleet of devices</li><li>a Node.js client that runs on the RPi and that is automatically installed by the <em>dotpi-install</em> tool.</li></ul><h2 id="installing-the-dotpi-manager" tabindex="-1">Installing the <code>dotpi-manager</code> <a class="header-anchor" href="#installing-the-dotpi-manager" aria-label="Permalink to &quot;Installing the `dotpi-manager`&quot;">​</a></h2><p>The first time, you need to install the <code>dotpi-manager</code>.</p><p>Chose where to install it.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#E6DB74;"> ~/Documents</span></span></code></pre></div><p>And clone the git project.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">git</span><span style="color:#E6DB74;"> clone https://github.com/ircam-ismm/dotpi-manager.git</span></span></code></pre></div><p>In the project, install the dependencies.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#E6DB74;"> ~/Documents/dotpi-manager/</span></span>\n<span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#E6DB74;"> install</span></span></code></pre></div><h2 id="running-the-dotpi-manager" tabindex="-1">Running the <code>dotpi-manager</code> <a class="header-anchor" href="#running-the-dotpi-manager" aria-label="Permalink to &quot;Running the `dotpi-manager`&quot;">​</a></h2><p>Run the manager from its directory.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#E6DB74;"> ~/Documents/dotpi-manager/</span></span>\n<span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#E6DB74;"> run dev</span></span></code></pre></div><p>Now, it is up and running.</p><h2 id="acessing-the-dotpi-manager" tabindex="-1">Acessing the <code>dotpi-manager</code> <a class="header-anchor" href="#acessing-the-dotpi-manager" aria-label="Permalink to &quot;Acessing the `dotpi-manager`&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Make sure your computer is on the same network as the one you configured for the RPi in the install step</p></div><p>Once the server is up and running, go to <a href="http://127.0.0.1:9000" target="_blank"><a href="http://127.0.0.1:9000" target="_blank" rel="noreferrer">http://127.0.0.1:9000</a></a>, and Tada! you should see your RPi in the interface:</p><p><img src="'+o+'" alt="dotpi-manager"></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Do <em>not</em> plug headphones to the Raspberry Pi before the following test.</p></div><p>Now if you click the check-sound bang (on the right-hand side of the RPI status in your manager), you should hear a full volume short white noise coming out of the mini jack output of your RPI.</p>',21),l=[i];function p(r,c,d,h,g,u){return t(),a("div",null,l)}const y=e(s,[["render",p]]);export{f as __pageData,y as default};
